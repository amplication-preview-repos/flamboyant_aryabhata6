/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, UserLastState as PrismaUserLastState } from "@prisma/client";

export class UserLastStateServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.UserLastStateCountArgs, "select">
  ): Promise<number> {
    return this.prisma.userLastState.count(args);
  }

  async userLastStates<T extends Prisma.UserLastStateFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserLastStateFindManyArgs>
  ): Promise<PrismaUserLastState[]> {
    return this.prisma.userLastState.findMany<Prisma.UserLastStateFindManyArgs>(
      args
    );
  }
  async userLastState<T extends Prisma.UserLastStateFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserLastStateFindUniqueArgs>
  ): Promise<PrismaUserLastState | null> {
    return this.prisma.userLastState.findUnique(args);
  }
  async createUserLastState<T extends Prisma.UserLastStateCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserLastStateCreateArgs>
  ): Promise<PrismaUserLastState> {
    return this.prisma.userLastState.create<T>(args);
  }
  async updateUserLastState<T extends Prisma.UserLastStateUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserLastStateUpdateArgs>
  ): Promise<PrismaUserLastState> {
    return this.prisma.userLastState.update<T>(args);
  }
  async deleteUserLastState<T extends Prisma.UserLastStateDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserLastStateDeleteArgs>
  ): Promise<PrismaUserLastState> {
    return this.prisma.userLastState.delete(args);
  }
}
